on:
  workflow_call:
    inputs:
      workingDirectory:
        required: false
        type: string
        description: "Location of Terragrunt files for execution"
        default: ./
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_TENANT_ID:
        required: true

jobs:
  validate:
    name: "Terraform fmt & validate"
    runs-on:
      - self-hosted
      - terraform-1.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform fmt check
        run: terraform fmt -check -recursive -diff

      - name: Terraform validate
        run: terragrunt validate --terragrunt-working-dir ${{ inputs.workingDirectory }}
        env:
          ARM_CLIENT_ID : ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  
  plan:
    name: Terraform Plan
    runs-on:
      - self-hosted
      - terraform-1.0
    outputs:
      modified_terraform: ${{ steps.plan.outputs.modified_terraform }}
    needs: validate
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Terragrunt plan
        run: |
          set -o pipefail
          terragrunt plan --terragrunt-working-dir ${{ inputs.workingDirectory }} | tee logs.txt
          echo "##[set-output name=modified_terraform;]$(cat logs.txt | grep "No changes. Infrastructure is up-to-date." || true)"
        id: plan
        env:
          ARM_CLIENT_ID : ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  
  pullRequestComment:
    name: Comment on PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - plan
    steps:
      - name: Pull Request Comment
        if: "!contains( ${{ needs.plan.outputs.modified_terraform }}, 'No changes. Infrastructure is up-to-date.')"
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "This PR will modify the currently deployed application in Azure"
