on:
  workflow_call:
    inputs:
      isPullRequest:
        required: false
        default: false
        type: boolean
        description: "Determine if this is a Pull Request - If so, comment on PR with plan output"
      working-directory:
        required: false
        type: string
        description: "Location of Terragrunt files for execution"
        default: ./
      environment:
        required: false
        default: dev
        type: string
        description: "Enviroment to plan against"
      branch:
        required: false
        default: main
        type: string
    secrets:
      TF_VAR_ARM_CLIENT_ID:
        required: true
        type: string
          # ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_ARM_CLIENT_SECRET:
        required: true
        type: string
          # ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_ARM_SUBSCRIPTION_ID:
        required: true
        type: string
          # ${{ secrets.ARM_SUBSCRIPTION_ID }}
      TF_VAR_ARM_TENANT_ID:
        required: true
        type: string
          # ${{ secrets.ARM_TENANT_ID }}

jobs:
  fmt:
    name: "Terraform fmt check"
    runs-on:
      - self-hosted
      - terraform-1.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform fmt check
        run: terraform fmt -check -recursive -diff
  
  validate:
    name: "Terraform validate check"
    runs-on:
      - self-hosted
      - terraform-1.0
    needs: fmt
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform validate
        run: terraform validate
        env:
          ARM_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
          ENVIRONMENT: ${{ inputs.environment }}
          TF_VAR_arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
  
  plan:
    name: Terraform Plan
    runs-on:
      - self-hosted
      - terraform-1.0
    outputs:
      modified_terraform: ${{ steps.plan.outputs.modified_terraform }}
    needs: validate
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Terragrunt plan
        run: |
          terragrunt run-all plan > logs.txt
          echo "##[set-output name=modified_terraform;]$(cat logs.txt | grep "No changes. Infrastructure is up-to-date." || true)"
        id: plan
        env:
          ARM_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
          ENVIRONMENT: ${{ inputs.environment }}
          TF_VAR_arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
  
  pullRequestComment:
    runs-on: ubuntu-latest
    needs:
      - plan
    steps:
      - name: Pull Request Comment
        if: ${{ inputs.isPullRequest == true }} && contains( ${{ needs.plan.outputs.modified_terraform }}, "No changes. Infrastructure is up-to-date.")
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "This PR will modify the currently deployed application in Azure"
